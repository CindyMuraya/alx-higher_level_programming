
===========================
How to Use 0-add_integer.py
===========================

This is the integer addition module. It defines the ``add_integer(a, b=98)`` function.
module supplies a function add_integer() e.g.

add_integer() returns the sum of two integers. 

>>> add_integer = __import__('0-add_integer').add_integer


Adds two integers a and b
>>> add_integer(4, 3)
7
>>> add_integer(-2, 7)
5

Floating and non-floating point values can be combined, but floats are be casted to integers
>>> add_integer(12.24, 3)
15

The function also works with floating-point values
>>> add_integer(5.4, 9.0)
14


``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:
>>> add_integer(9, "b")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer


If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.
>>> add_integer("a" + "b")
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(None, None)
Traceback (most recent call last):
TypeError: a must be an integer
